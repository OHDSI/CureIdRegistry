/*
Filename:
01A_SEPSIS_Cohort.sql

Purpose:
This script creates a cohort of patients for the SEPSIS registry.
The patient list is saved in the cohort table, along with other useful data elements.

Description:
This SQL script creates a cohort of hospitalized patients with sepsis
based on specific criteria. The script performs several steps to identify and filter
the patients before finally creating the cohort table. The script sets the context to
use a specific database, but the schema name is meant to be provided
by the user.

Dependencies:
None
*/

USE YOUR_DATABASE;

--Drop all tables
DROP TABLE IF EXISTS [Results].[Sepsis_Cohort]; --Change schema as appropriate
DROP TABLE IF EXISTS #sepsis_diagnosis;
DROP TABLE IF EXISTS #first_pos;
DROP TABLE IF EXISTS #inpat_intermed;
DROP TABLE IF EXISTS #inpat;
DROP TABLE IF EXISTS #inpat_closest_vis;
DROP TABLE IF EXISTS #los;
DROP TABLE IF EXISTS #closest_vis;
DROP TABLE IF EXISTS #first_vis;
DROP TABLE IF EXISTS #los_max;
DROP TABLE IF EXISTS #Vis_Occ;

--Create cohort table (again specify schema as appropriate)
CREATE TABLE [Results].[Sepsis_Cohort] (
    [person_id] [int] NOT NULL,
    [visit_occurrence_id] [int] NOT NULL,
    [visit_start_date] [date] NOT NULL,
    [visit_end_date] [date] NOT NULL,
    [First_Pos_Date] [date] NULL,
    [Days_From_First_Pos] [int] NULL,
    [Abs_Days_From_First_Pos] [int] NULL,
    [Before_Or_After] [int] NOT NULL,
    [birth_datetime] [datetime2](7) NULL,
    [death_datetime] [datetime2](7) NULL
) ON [PRIMARY];

--First identify patients (inpatient and outpatient) with sepsis diagnosis
SELECT DISTINCT
    person_id,
    condition_start_date AS diagnosis_date
INTO #sepsis_diagnosis
FROM dbo.CONDITION_OCCURRENCE
WHERE condition_concept_id IN (
    SELECT c.concept_id
    FROM dbo.CONCEPT AS c
    INNER JOIN dbo.CONCEPT_ANCESTOR AS ca ON c.concept_id = ca.descendant_concept_id
    WHERE ca.ancestor_concept_id = 132797
    AND c.invalid_reason IS NULL
)
-- Here we add a date restriction: after January 1, 2020
AND condition_start_date >= DATEFROMPARTS(2020, 01, 01);

--Show counts of unique sepsis diagnoses (not unique patients)
SELECT COUNT(*) AS "sepsis_diagnosis_count" FROM #sepsis_diagnosis;

--First sepsis diagnosis per patient
SELECT
    person_id,
    MIN(diagnosis_date) AS "First_Pos_Date"
INTO #first_pos
FROM #sepsis_diagnosis
GROUP BY person_id;

--Show count of unique patients so far
SELECT COUNT(DISTINCT person_id) AS "sepsis_positive_lab_person_count" FROM #first_pos;

--Sepsis patients with inpatient encounters (intermediate table for debugging)
SELECT
    v.person_id,
    v.visit_occurrence_id,
    v.visit_start_date,
    v.visit_end_date,
    p.First_Pos_Date,
    DATEDIFF(DAY, p.First_Pos_Date, v.visit_start_date) AS "Days_From_First_Pos",
    ABS(DATEDIFF(DAY, p.First_Pos_Date, v.visit_start_date)) AS "Abs_Days_From_First_Pos"
INTO #inpat_intermed
FROM visit_occurrence AS v
INNER JOIN #first_pos AS p ON v.person_id = p.person_id
WHERE v.visit_concept_id IN (9201, 262); --Inpatient visit/ED and inpt visit

--Intermediate count of Sepsis patients with inpatient encounters
SELECT COUNT(DISTINCT person_id) AS "sepsis_inpatients_count" FROM #inpat_intermed;

--Count of patients after temporal constraints applied
SELECT COUNT(DISTINCT person_id) AS "sepsis_inpatients_date_filtered_count"
FROM #inpat_intermed
WHERE
    visit_start_date >= '2020-01-01'
    AND (
        DATEDIFF(DAY, First_Pos_Date, visit_start_date) > -7
        AND DATEDIFF(DAY, First_Pos_Date, visit_start_date) < 21
    );

--Apply all incl/excl criteria to identify all patients hospitalized with sepsis
--up to 21 days after a sepsis diagnosis or up to 7 days prior to a sepsis diagnosis
SELECT
    v.person_id,
    v.visit_occurrence_id,
    v.visit_start_date,
    v.visit_end_date,
    p.First_Pos_Date,
    DATEDIFF(MINUTE, v.visit_start_datetime, v.visit_end_datetime) AS "Length_Of_Stay",
    DATEDIFF(DAY, p.First_Pos_Date, v.visit_start_date) AS "Days_From_First_Pos",
    ABS(DATEDIFF(DAY, p.First_Pos_Date, v.visit_start_date)) AS "Abs_Days_From_First_Pos",
    CASE
        WHEN DATEDIFF(DAY, p.First_Pos_Date, v.visit_start_date) < 0 THEN -1
        ELSE 1
    END AS Before_Or_After
INTO #inpat
FROM visit_occurrence AS v
INNER JOIN #first_pos AS p ON v.person_id = p.person_id
WHERE
    v.visit_concept_id IN (9201, 262) --Inpatient visit/ED and inpt visit
    AND v.visit_start_date >= '2020-01-01'
    AND (
        DATEDIFF(DAY, p.First_Pos_Date, v.visit_start_date) > -7
        AND DATEDIFF(DAY, p.First_Pos_Date, v.visit_start_date) < 21
    );

--Count of patients and encounters that meet the criteria
SELECT
    COUNT(DISTINCT person_id) AS "sepsis_inpatients",
    COUNT(DISTINCT visit_occurrence_id) AS "sepsis_inpatient_visits"
FROM #inpat;

--Finds closest encounter to first sepsis diagnosis (for patients hospitalized more than once)
SELECT
    person_id,
    MIN(Abs_Days_From_First_Pos) AS "Closest_Vis"
INTO #inpat_closest_vis
FROM #inpat
GROUP BY person_id;

--Create flag for longest LOS per person per visit_start_date
SELECT
    i.person_id,
    i.visit_start_date,
    MAX(i.Length_Of_Stay) AS "max_los"
INTO #los
FROM #inpat AS i
GROUP BY i.person_id, i.visit_start_date;

--Apply criteria in sequence
SELECT i.*
INTO #closest_vis
FROM #inpat AS i
INNER JOIN #inpat_closest_vis
    AS c ON i.person_id = c.person_id
AND i.Abs_Days_From_First_Pos = c.Closest_Vis;

SELECT i.*
INTO #first_vis
FROM #closest_vis AS i;

SELECT i.*
INTO #los_max
FROM #first_vis AS i
INNER JOIN #los
    AS los ON i.person_id = los.person_id
AND i.visit_start_date = los.visit_start_date
AND i.Length_Of_Stay = los.max_los;

--Make cohort table
SELECT
    v.*,
    p.birth_datetime,
    d.death_datetime
INTO #Vis_Occ
FROM #los_max AS v
INNER JOIN person AS p ON v.person_id = p.person_id
LEFT JOIN death AS d ON v.person_id = d.person_id;

--Creates cohort by adding on birth date and death date
INSERT INTO [Results].[Sepsis_Cohort] --Change schema if not using Results
(
    [person_id], [visit_occurrence_id], [visit_start_date], [visit_end_date], [First_Pos_Date],
    [Days_From_First_Pos], [Abs_Days_From_First_Pos], [Before_Or_After],
    [birth_datetime], [death_datetime]
)
SELECT
    v.[person_id],
    v.[visit_occurrence_id],
    v.[visit_start_date],
    v.[visit_end_date],
    v.[First_Pos_Date],
    v.[Days_From_First_Pos],
    v.[Abs_Days_From_First_Pos],
    v.[Before_Or_After],
    v.[birth_datetime],
    v.[death_datetime]
FROM #Vis_Occ AS v;

--Final count of patients
SELECT COUNT(DISTINCT person_id) AS "Final_patient_count" FROM #Vis_Occ;

--View data
SELECT TOP 100 *
FROM [Results].[Sepsis_Cohort];
